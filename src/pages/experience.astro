---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const experience = await getCollection('experience');

const formatPeriod = ({ start, end }: CollectionEntry<'experience'>['data']['period']) => {
	const getMonthYear = (date: typeof end) => {
		if (date === 'present') return 'Present';

		const month = date.getUTCMonth();
		const year = date.getUTCFullYear();
		return `${month}/${year}`;
	};

	return `${getMonthYear(start)} - ${getMonthYear(end)}`;
};
---

<Layout>
	<div class="my-4 flex flex-col items-center">
		<p class="my-6 text-center text-4xl">My experience</p>

		<div class="containter mx-4 lg:w-2xl">
			<ul
				class:list={[
					'timeline timeline-vertical timeline-snap-icon',
					experience.length > 1 ? 'max-md:timeline-compact' : 'timeline-compact',
				]}
			>
				{
					experience.map(({ data }, idx) => (
						<li>
							<div class="timeline-middle">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									viewBox="0 0 20 20"
									fill="currentColor"
									class="h-5 w-5"
								>
									<path
										fill-rule="evenodd"
										d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
										clip-rule="evenodd"
									/>
								</svg>
							</div>
							<div
								class:list={[
									'mb-10',
									experience.length <= 1
										? 'timeline-start'
										: idx % 2 === 0
											? 'timeline-start md:text-end'
											: 'timeline-end',
								]}
							>
								<time class="font-mono italic">{formatPeriod(data.period)}</time>
								<div class="text-lg font-black">{data.name}</div>
								<p class="font-medium">{data.location.name}</p>
								<p class="text-sm font-medium">{data.location.description}</p>

								<ul class="list">
									{data.works.map((work, work_idx) => (
										<li
											class:list={[
												'list-row flex',
												experience.length > 1 && idx % 2 === 0 && 'md:flex-row-reverse',
											]}
										>
											<div class="text-2xl font-thin tabular-nums opacity-30">
												{(work_idx + 1).toString().padStart(2, '0')}
											</div>
											<div
												class:list={[
													'list-col-grow flex flex-1 items-center text-sm',
													experience.length > 1 && idx % 2 === 0 && 'md:justify-end',
												]}
											>
												<p>{work}</p>
											</div>
										</li>
									))}
								</ul>
							</div>
							<hr />
						</li>
					))
				}
			</ul>
		</div>
	</div>
</Layout>
